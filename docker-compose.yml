version: '3.8'
services:
  app:
    build:
      context: .
    container_name: evergreen_app
    volumes:
      - ./:/var/www
    networks:
      - evergreen
    depends_on:
      - postgres_db
      - redis_server

  nginx:
    image: nginx:latest
    container_name: evergreen_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    networks:
      - evergreen

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1 & wait $${!}; done'"
    networks:
      - evergreen

  postgres_db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - evergreen

  redis_server:
    image: redis:alpine
    container_name: redis_server
    restart: always
    networks:
      - evergreen

networks:
  evergreen:
    driver: bridge

volumes:
  pgdata:
